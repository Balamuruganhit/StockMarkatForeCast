# -*- coding: utf-8 -*-
"""StockMarketForeCast.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1elbnJrSz2wStuARUPuPlZc9LFldTcsy8
"""

# Commented out IPython magic to ensure Python compatibility.
import pandas as pd
import numpy as np
from sklearn import metrics
# %matplotlib inline
import matplotlib.pyplot as plt

dataset=pd.read_csv("Book.csv")

dataset.head()

dataset["Date"]=pd.to_datetime(dataset.Date)

dataset.shape

dataset.drop("Adj Close",axis = 1, inplace = True)

dataset.head()

dataset.isnull().sum()

dataset.isna().any()

dataset.info()

dataset.describe()

print(len(dataset))

dataset['Open'].plot(figsize=(16,6))



x=dataset[['Open','High','Low','Volume']]
y=dataset["Close"]

from sklearn.model_selection import train_test_split
x_train,X_test,y_train,Y_test = train_test_split(x,y,random_state = 0)

x_train.shape

X_test.shape

from sklearn.linear_model import LinearRegression
from sklearn.metrics import confusion_matrix, accuracy_score
regressor =LinearRegression()

regressor.fit(x_train,y_train)

print(regressor.coef_)

print(regressor.intercept_)

predicted=regressor.predict(X_test)

print(X_test)

predicted.shape

dframe = pd.DataFrame(Y_test)

dframe.rename(columns={0: "predicted"}, inplace=True)

dfr=pd.DataFrame({'Actual prize':Y_test,"Predicted Price":predicted})

print(dfr)

dfr.head(10)

from sklearn.metrics import confusion_matrix, accuracy_score

regressor.score(X_test,Y_test)

import math

predicted_series = pd.Series(predicted)

mean_absolute_error = metrics.mean_absolute_error(Y_test, predicted_series)

print("Mean Absolute Error:", mean_absolute_error)

print('Mean square Error:',metrics.mean_squared_error(Y_test, predicted_series))

print("Root Mean Square Error",math.sqrt(metrics.mean_squared_error(Y_test,predicted)))

graph=dfr.head(20)

graph.plot(kind="bar")